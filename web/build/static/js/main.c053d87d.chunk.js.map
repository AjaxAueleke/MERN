{"version":3,"sources":["components/login.js","components/user.js","components/dashboard.js","components/signup.js","App.js","reportWebVitals.js","index.js"],"names":["validationSchema","yup","email","required","password","min","Login","history","useHistory","useState","error","setError","useEffect","localStorage","getItem","push","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","setDis","axios","post","trim","then","res","status","clear","setItem","JSON","stringify","data","catch","err","dis","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","Button","color","onClick","Alert","severity","margin","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","type","disabled","User","mobile","useMediaQuery","tablet","local","parse","firstName","first","setFirst","lastName","last","setLast","setEmail","about","setAbout","editing","setEditing","Paper","padding","fontSize","fontStyle","width","List","ListItem","display","justifyContent","flexWrap","style","class","e","target","userId","_id","alert","Dashboard","loadPosts","setLoadPosts","posts","setPost","get","todo","setTodo","preventDefault","postDetails","Stack","textAlign","map","postDetail","firstname","lastname","ab","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c053d87d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Stack from \"@mui/material/Stack\";\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(6, \"Password should be of minimum 6 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\nlet Login;\r\nexport default Login = () => {\r\n  const history = useHistory();\r\n  const [error, setError] = useState(false);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      console.log(values);\r\n      setDis(true);\r\n      axios\r\n        .post(`/api/v1/login`, {\r\n          email: values.email.trim(),\r\n          password: values.password,\r\n        })\r\n        .then((res) => {\r\n          resetForm();\r\n          if (res.status === 200) {\r\n            localStorage.clear();\r\n            localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n            history.push(\"/dashboard\");\r\n          }\r\n          setDis(false);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          resetForm();\r\n          setDis(false);\r\n          setError(true)\r\n          console.log(err);\r\n        });\r\n    },\r\n  });\r\n  const [dis, setDis] = useState(false);\r\n  return (\r\n    <div>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Login Page\r\n            </Typography>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                history.push(\"/signup\");\r\n              }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n        {error && (\r\n          <Alert severity=\"error\">Invalid email and/or password</Alert>\r\n        )}\r\n        <Box sx={{ margin: \"50px auto\" }}>\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.email && Boolean(formik.errors.email)}\r\n              helperText={formik.touched.email && formik.errors.email}\r\n              sx={{ margin: \"10px\" }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              id=\"password\"\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.password && Boolean(formik.errors.password)}\r\n              helperText={formik.touched.password && formik.errors.password}\r\n              sx={{ margin: \"10px\" }}\r\n            />\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n              type=\"submit\"\r\n              disabled={dis}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport ModeEditIcon from \"@mui/icons-material/ModeEdit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from 'axios';\r\nimport \"./User.css\";\r\n/*    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Photos\" secondary=\"Jan 9, 2014\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <WorkIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <BeachAccessIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Vacation\" secondary=\"July 20, 2014\" />\r\n      </ListItem>\r\n    </List> */\r\nconst User = () => {\r\n  const mobile = useMediaQuery(\"(max-width:600px)\");\r\n  const tablet = useMediaQuery(\"(min-width:992px)\");\r\n  console.log(mobile, tablet);\r\n  const local = JSON.parse(localStorage.getItem(\"user\"));\r\n  const mbdesign = {\r\n    margin: \"20px auto\",\r\n    padding: \"10px\",\r\n    fontSize: \"1.25rem\",\r\n    fontStyle: \"bold\",\r\n    width: \"90%\",\r\n  };\r\n  const tbdesign = {};\r\n  const [first, setFirst] = useState(local.firstName);\r\n\r\n  const [last, setLast] = useState(local.lastName);\r\n\r\n  const [email, setEmail] = useState(local.email);\r\n\r\n  const [about, setAbout] = useState(local.about);\r\n\r\n  const [editing, setEditing] = useState(true);\r\n  if (local) {\r\n    return (\r\n      <Paper sx={mobile ? mbdesign : tbdesign}>\r\n        <List>\r\n          <ListItem\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            <h1 style={{ fontSize: \"1.25rem\", padding: \"5px\" }}>\r\n              User Details\r\n            </h1>\r\n            <ModeEditIcon\r\n              onClick={() => {\r\n                console.log(\"Clicked\");\r\n                setEditing(false);\r\n              }}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <TextField\r\n              class=\"disabled-form\"\r\n              variant=\"standard\"\r\n              disabled={editing}\r\n              value={first}\r\n              onChange={(e) => {\r\n                setFirst(e.target.value);\r\n              }}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <TextField\r\n              class=\"disabled-form\"\r\n              variant=\"standard\"\r\n              disabled={editing}\r\n              value={last}\r\n              onChange={(e) => {\r\n                setLast(e.target.value);\r\n              }}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <TextField\r\n              class=\"disabled-form\"\r\n              variant=\"standard\"\r\n              disabled={editing}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </ListItem>\r\n          <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <TextField\r\n              class=\"disabled-form\"\r\n              variant=\"standard\"\r\n              disabled={editing}\r\n              value={about}\r\n              onChange={(e) => {\r\n                setAbout(e.target.value);\r\n              }}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <Button variant=\"contained\" sx = {{fontStyle : 'bold'}} disabled={editing} onClick = {() => {\r\n              axios.post(\"/api/v1/updateDetails\", {\r\n                firstName : first,\r\n                lastName : last,\r\n                email : email,\r\n                about : about,\r\n                userId : local._id\r\n              }).then(res => {\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n              })\r\n              .catch(err => {\r\n                alert(\"Data was not updated\");\r\n              })\r\n            }}>\r\n              Update\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n    );\r\n  } else {\r\n    return <div>User Not Found!</div>;\r\n  }\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport User from \"./user\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\n\r\nconst Dashboard = () => {\r\n  const history = useHistory();\r\n  const mobile = useMediaQuery(\"(max-width:600px)\");\r\n  const tablet = useMediaQuery(\"(max-width:992px)\");\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\")) {\r\n      history.push(\"/dashboard\");\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n  const [loadPosts, setLoadPosts] = useState(true);\r\n  const [posts, setPost] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `/api/v1/posts/${\r\n          JSON.parse(localStorage.getItem(\"user\"))._id\r\n        }`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setPost(res.data.post);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error reading data\");\r\n      });\r\n  }, [loadPosts, setPost]);\r\n  const [todo, setTodo] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Dashboard\r\n            </Typography>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                localStorage.clear();\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      <User />\r\n\r\n      <Box sx={{ margin: \"50px auto\" }}>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            axios\r\n              .post(\"/api/v1/posts\", {\r\n                postDetails: todo,\r\n                userId: JSON.parse(localStorage.getItem(\"user\"))._id,\r\n              })\r\n              .then((res) => {\r\n                setLoadPosts(!loadPosts);\r\n              })\r\n              .catch((err) => {\r\n                console.log(\"Error posting  data\");\r\n              });\r\n          }}\r\n        >\r\n          <TextField\r\n            fullWidth\r\n            id=\"post\"\r\n            name=\"post\"\r\n            label=\"Posts\"\r\n            value={todo}\r\n            onChange={(e) => {\r\n              setTodo(e.target.value);\r\n            }}\r\n          />\r\n\r\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\" fullWidth>\r\n            Add Post\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n      <Stack sx={{ margin: \"auto\", textAlign: \"center\" }}>\r\n        {posts.map((post) => {\r\n          return (\r\n            <Paper>\r\n              <div key={post._id}>{post.postDetail}</div>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst validationSchema = yup.object({\r\n  firstname: yup\r\n    .string(\"Enter you first name\")\r\n    .required(\"FirstName is required\"),\r\n  lastname: yup\r\n    .string(\"Enter your last name\")\r\n    .required(\"Last Name is required\"),\r\n\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n  ab: yup.string(\"Enter some info about yourself\").required(\"About is required\"),\r\n});\r\nlet Login;\r\nexport default Login = () => {\r\n  const history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      ab: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      console.log(values);\r\n      axios\r\n        .post(`/api/v1/signup`, {\r\n          firstName: values.firstname,\r\n          lastName: values.lastname,\r\n          email: values.email,\r\n          password: values.password,\r\n          about: values.ab,\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            localStorage.clear();\r\n            localStorage.setItem(\"user\", JSON.stringify(res.data));\r\n            history.push(\"/\");\r\n          }\r\n          console.log(res);\r\n        })\r\n        .catch((err) => console.error(err));\r\n    },\r\n  });\r\n  return (\r\n    <div>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Signup\r\n            </Typography>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                history.push(\"/signup\");\r\n              }}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      <Box sx={{ margin: \"50px auto\" }}>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            id=\"firstname\"\r\n            name=\"firstname\"\r\n            label=\"First Name\"\r\n            value={formik.values.firstname}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.firstname && Boolean(formik.errors.firstname)}\r\n            helperText={formik.touched.firstname && formik.errors.firstname}\r\n            sx={{ margin: \"10px\" }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"lastname\"\r\n            name=\"lastname\"\r\n            label=\"Last Name\"\r\n            value={formik.values.lastname}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.lastname && Boolean(formik.errors.lastname)}\r\n            helperText={formik.touched.lastname && formik.errors.lastname}\r\n            sx={{ margin: \"10px\" }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"email\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n            sx={{ margin: \"10px\" }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n            sx={{ margin: \"10px\" }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"ab\"\r\n            name=\"ab\"\r\n            label=\"About\"\r\n            value={formik.values.ab}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.ab && Boolean(formik.errors.ab)}\r\n            helperText={formik.touched.ab && formik.errors.ab}\r\n            sx={{ margin: \"10px\" }}\r\n          />\r\n\r\n          <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport Login from \"./components/login\";\r\nimport Dashboard from \"./components/dashboard\";\r\nimport Signup from \"./components/signup\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/signup\">\r\n            <Signup />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}